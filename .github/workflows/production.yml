name: Deploy Production

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    # Make the bucket available to ALL steps
    env:
      BUCKET: ${{ secrets.GCS_BUCKET_NAME }}
      GCS_PREFIX: ""

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SA_EMAIL }}

      - name: Setup gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GOOGLE_PROJECT_ID }}

      # ---- Preflight checks ----
      - name: Preflight: validate bucket
        run: |
          set -euo pipefail
          if [ -z "${BUCKET:-}" ]; then
            echo "::error::Missing GCS_BUCKET secret. Set it to your bucket name (without gs://)."
            exit 1
          fi
          echo "Target bucket: ${BUCKET}"
          DEST="gs://${BUCKET}/${GCS_PREFIX}"
          echo "DEST: ${DEST}"

      # ---- Upload (exclude .github and dotfiles) ----
      - name: Upload static files to GCS
        run: |
          set -euo pipefail
          DEST="gs://${BUCKET}/${GCS_PREFIX}"
          echo "Deploying files to ${DEST}"
          gsutil -m rsync -r -d -x "^\..*|^.github/.*" ./ "${DEST}"

      # ---- Safe cache headers (wonâ€™t error if no matches) ----
      - name: Set cache headers (safe)
        run: |
          set -euo pipefail
          DEST="gs://${BUCKET}/${GCS_PREFIX}"
          echo "Setting cache headers under ${DEST}"

          # Long-cache static assets
          assets=$(gsutil ls -r "${DEST}/**" | grep -E '\.(css|js|mjs|png|jpg|jpeg|gif|svg|ico|webp|woff2?)$' || true)
          if [ -n "${assets}" ]; then
            echo "Found static assets:"
            echo "${assets}" | sed 's/^/  /'
            echo "${assets}" | xargs -r -n50 gsutil -m setmeta -h "Cache-Control:public,max-age=31536000,immutable"
          else
            echo "No static assets found to set long cache."
          fi

          # No-cache for HTML
          htmls=$(gsutil ls -r "${DEST}/**" | grep -E '\.html$' || true)
          if [ -n "${htmls}" ]; then
            echo "Found HTML files:"
            echo "${htmls}" | sed 's/^/  /'
            echo "${htmls}" | xargs -r -n50 gsutil -m setmeta -h "Cache-Control:no-cache"
          else
            echo "No HTML files found to set no-cache."
          fi
